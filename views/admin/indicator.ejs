<style>
    .vessel-list-container {
        max-height: 200px;
        overflow-y: auto;
        border: 1px solid #dee2e6;
        padding: 10px;
        border-radius: 5px;
        background-color: #f8f9fa;
    }

    #toggle-vessel-list {
        display: block;
        margin-bottom: 10px;
    }

    .form-check {
        margin-bottom: 5px;
    }

    .table-div {
        max-width: 100%;
        max-height: 400px;
        overflow: auto;
        position: relative;
    }

    .table {
        width: 100%;
        border-collapse: collapse;
        margin: auto;
    }

    .table thead th {
        position: sticky;
        top: 0;
        background-color: #f8f9fa;
        z-index: 2;
    }

    .table tbody td:first-child,
    .table thead th:first-child {
        position: sticky;
        left: 0;
        background-color: #ffffff;
        z-index: 1;
        border-right: 1px solid #dee2e6;
    }

    .hidden-column {
        display: none;
    }

    .btn-secondary.active {
        background-color: #d3d3d3;
    }

    .btn-secondary {
        background-color: #ffffff;
        color: #000;
    }

    .view-button-div {
        margin-top: 20px;
    }

    .cell-low {
        border: 2px solid green;
    }

    .cell-medium {
        border: 2px solid orange;
    }

    .cell-high {
        border: 2px solid red;
    }

    .labels {
        font-weight: bold;
        background-color: #e6e6e6;
        padding: 3px;
        border-radius: 2px;
    }

    #comparison-filters {
        display: flex;
        align-items: center;
        justify-content: flex-start;
    }
</style>

<div class="container">
    <h3 class="h3 mt-5">Environmental Performance Indicators</h3>

    <div class="filters">
        <div id="comparison-filters" class="my-3">
            <div class="mx-2">
                <label for="year-select-1" class="labels">Select Year 1</label>
                <select id="year-select-1" class="form-select form-select-sm">
                    <option value="2023">2023</option>
                    <option value="2024">2024</option>
                </select>
            </div>

            <div class="mx-2">
                <label for="year-select-2" class="labels">Select Year 2</label>
                <select id="year-select-2" class="form-select form-select-sm">
                    <option value="2023">2023</option>
                    <option value="2024">2024</option>
                </select>
            </div>

            <div class="mx-2">
                <label for="quarter-select" class="labels">Select Quarter</label>
                <select id="quarter-select" class="form-select form-select-sm">
                    <option value="Q1">Q1</option>
                    <option value="Q2">Q2</option>
                    <option value="Q3">Q3</option>
                    <option value="Q4">Q4</option>
                </select>
            </div>

        </div>

        <label for="vessel-list" class="labels">Select Vessels</label>
        <div class="accordion">
            <button id="toggle-vessel-list" class="btn btn-secondary btn-sm mb-2">Show Vessels</button>
            <div id="vessel-list-container" class="vessel-list-container" style="display: none;">
                <div id="vessel-list">
                    <!-- Gemi isimleri dinamik olarak doldurulacak -->
                </div>
            </div>
        </div>

        <button id="compare-button" class="btn btn-primary btn-sm mt-3 mb-2">Compare</button>

        <div class="table-div my-3 border">
            <table class="table table-bordered table-responsive w-100">
                <thead>
                    <tr class="mx-auto" id="vessel-name">
                        <th>Vessel Name</th>
                        <th>Emission (mt)</th>
                        <th>Tax (€)</th>
                        <th>TTW (gCO2)</th>
                        <th>WTT (gCO2)</th>
                        <th>EEOI (g/(mt x nm))</th>
                        <th>AER (g/(dwt x nm))</th>
                        <th>Transport Work (mt x nm)</th>
                        <th>Transport Work DWT (mt x nm)</th>
                        <th>CH4 (kg)</th>
                        <th>CH4 Intensity (mg/(mt x nm))</th>
                        <th>N2O (kg)</th>
                        <th>N2O Intensity (mg/(mt x nm))</th>
                    </tr><!-- Alt başlıklar buraya dinamik olarak eklenecek -->
                </thead>
                <tbody id="data-table">
                    <!-- Dynamic data will be injected here -->
                </tbody>
            </table>
        </div>
    </div>

    <script>
        document.getElementById("compare-button").addEventListener("click", async () => {
            const year1 = document.getElementById("year-select-1").value;
            const year2 = document.getElementById("year-select-2").value;
            const quarter = document.getElementById("quarter-select").value;

            // Seçili gemi isimlerini al
            const selectedVessels = Array.from(document.querySelectorAll("#vessel-list .form-check-input:checked"))
                .map(checkbox => checkbox.value);

            try {
                const response = await fetch("/admin/get-vessel-voyages", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ year1, year2, quarter, vessels: selectedVessels }),
                });

                if (!response.ok) {
                    throw new Error(`HTTP Error: ${response.status}`);
                }

                const result = await response.json();
                console.log("API Response:", result);

                if (result.success) {
                    const { year1Data, year2Data } = result;

                    const tableHead = document.querySelector("thead");
                    const tableBody = document.getElementById("data-table");

                    // Alt başlıkları güncelle
                    tableHead.innerHTML = `
     <tr class="table-secondary">
         <th class="bg-primary text-light" rowspan="2">Vessel Name</th>
         <th colspan="2" class="text-muted" style="font-size: 12px;
        background-color: #80E872;">Emission (mt)</th>
         <th colspan="2" class="text-muted" style="font-size: 12px;
        background-color: #80E872;">Tax (€)</th>
         <th colspan="2" class="text-muted" style="font-size: 12px;
        background-color: #80E872;">TTW (gCO2)</th>
         <th colspan="2" class="text-muted" style="font-size: 12px;
        background-color: #80E872;">WTT (gCO2)</th>
         <th colspan="2" class="text-muted" style="font-size: 12px;
        background-color: #80E872;">EEOI (g/(mt x nm))</th>
         <th colspan="2" class="text-muted" style="font-size: 12px;
        background-color: #80E872;">AER (g/(dwt x nm))</th>
         <th colspan="2" class="text-muted" style="font-size: 12px;
        background-color: #80E872;">Transport Work (mt x nm)</th>
         <th colspan="2" class="text-muted" style="font-size: 12px;
        background-color: #80E872;">Transport Work DWT (mt x nm)</th>
         <th colspan="2" class="text-muted" style="font-size: 12px;
        background-color: #80E872;">CH4 (kg)</th>
         <th colspan="2" class="text-muted" style="font-size: 12px;
        background-color: #80E872;">CH4 Intensity (mg/(mt x nm))</th> <!-- Yeni CH4 -->
         <th colspan="2" class="text-muted" style="font-size: 12px;
        background-color: #80E872;">N2O (kg)</th> <!-- Yeni N2O -->
         <th colspan="2" class="text-muted" style="font-size: 12px;
        background-color: #80E872;">N2O Intensity (mg/(mt x nm))</th> <!-- Yeni N2O Intensity -->
     </tr>
     <tr class="table-secondary">
         <th class="text-success">${year1} ${quarter}</th>
         <th class="text-success">${year2} ${quarter}</th>
         <th class="text-success">${year1} ${quarter}</th>
         <th class="text-success">${year2} ${quarter}</th>
         <th class="text-success">${year1} ${quarter}</th>
         <th class="text-success">${year2} ${quarter}</th>
         <th class="text-success">${year1} ${quarter}</th>
         <th class="text-success">${year2} ${quarter}</th>
         <th class="text-success">${year1} ${quarter}</th>
         <th class="text-success">${year2} ${quarter}</th>
         <th class="text-success">${year1} ${quarter}</th>
         <th class="text-success">${year2} ${quarter}</th>
         <th class="text-success">${year1} ${quarter}</th>
         <th class="text-success">${year2} ${quarter}</th>
         <th class="text-success">${year1} ${quarter}</th>
         <th class="text-success">${year2} ${quarter}</th>
         <th class="text-success">${year1} ${quarter}</th>
         <th class="text-success">${year2} ${quarter}</th>
         <th class="text-success">${year1} ${quarter}</th> <!-- Yeni CH4 -->
         <th class="text-success">${year2} ${quarter}</th> <!-- Yeni CH4 -->
         <th class="text-success">${year1} ${quarter}</th> <!-- Yeni N2O -->
         <th class="text-success">${year2} ${quarter}</th> <!-- Yeni N2O -->
         <th class="text-success">${year1} ${quarter}</th> <!-- Yeni N2O Intensity -->
         <th class="text-success">${year2} ${quarter}</th> <!-- Yeni N2O Intensity -->
     </tr>
 `;

                    // Tablo satırlarını güncelle
                    tableBody.innerHTML = "";

                    const vessels = new Set([...year1Data.map(d => d.vessel), ...year2Data.map(d => d.vessel)]);

                    vessels.forEach(vessel => {
                        const year1Row = year1Data.find(d => d.vessel === vessel) || {};
                        const year2Row = year2Data.find(d => d.vessel === vessel) || {};

                        const row = `
       <tr class="border">
         <td class="text-primary bg-light fw-bold">${vessel || "N/A"}</td>
         <td class="bg-light">${year1Row.emission || "-"}</td>
         <td class="bg-warning">${year2Row.emission || "-"}</td>
         <td class="bg-light">${year1Row.tax || "-"}</td>
         <td class="bg-warning">${year2Row.tax || "-"}</td>
         <td class="bg-light">${year1Row.ttw || "-"}</td>
         <td class="bg-warning">${year2Row.ttw || "-"}</td>
         <td class="bg-light">${year1Row.wtt || "-"}</td>
         <td class="bg-warning">${year2Row.wtt || "-"}</td>
         <td class="bg-light">${year1Row.eeoi || "-"}</td>
         <td class="bg-warning">${year2Row.eeoi || "-"}</td>
         <td class="bg-light">${year1Row.aer || "-"}</td>
         <td class="bg-warning">${year2Row.aer || "-"}</td>
         <td class="bg-light">${year1Row.transportWork || "-"}</td>
         <td class="bg-warning">${year2Row.transportWork || "-"}</td>
         <td class="bg-light">${year1Row.transportWorkDWT || "-"}</td>
         <td class="bg-warning">${year2Row.transportWorkDWT || "-"}</td>
         <td class="bg-light">${year1Row.ch4 || "-"}</td>
         <td class="bg-warning">${year2Row.ch4 || "-"}</td>
         <td class="bg-light">${year1Row.ch4Intensity || "-"}</td>
         <td class="bg-warning">${year2Row.ch4Intensity || "-"}</td> <!-- CH4 Intensity -->
         <td class="bg-light">${year1Row.n2o || "-"}</td> <!-- N2O -->
         <td class="bg-warning">${year2Row.n2o || "-"}</td> <!-- N2O -->
         <td class="bg-light">${year1Row.n2oIntensity || "-"}</td> <!-- N2O Intensity -->
         <td class="bg-warning">${year2Row.n2oIntensity || "-"}</td> <!-- N2O Intensity -->
     </tr>
 `;

                        tableBody.innerHTML += row;
                    });
                } else {
                    alert("No data found.");
                }
            } catch (error) {
                console.error("Frontend Error:", error);
            }
        });
        const loadVesselNames = async () => {
            try {
                const response = await fetch("/admin/vessel-names");
                if (!response.ok) {
                    throw new Error(`HTTP Error: ${response.status}`);
                }

                const result = await response.json();
                if (result.success) {
                    const vesselListDiv = document.getElementById("vessel-list");
                    vesselListDiv.innerHTML = ""; // Eski checkbox'ları temizle

                    result.vesselNames.forEach(vessel => {
                        const checkboxDiv = document.createElement("div");
                        checkboxDiv.className = "form-check";

                        const checkbox = document.createElement("input");
                        checkbox.type = "checkbox";
                        checkbox.className = "form-check-input";
                        checkbox.id = `vessel-${vessel}`;
                        checkbox.value = vessel;

                        const label = document.createElement("label");
                        label.className = "form-check-label";
                        label.htmlFor = `vessel-${vessel}`;
                        label.textContent = vessel;

                        checkboxDiv.appendChild(checkbox);
                        checkboxDiv.appendChild(label);

                        vesselListDiv.appendChild(checkboxDiv);
                    });
                } else {
                    console.error("Failed to load vessel names:", result.message);
                }
            } catch (error) {
                console.error("Error loading vessel names:", error);
            }
        };

        // Sayfa yüklendiğinde gemi isimlerini yükle
        document.addEventListener("DOMContentLoaded", () => {
            loadVesselNames();

            // Açılır/Kapanır olayını ayarla
            document.getElementById("toggle-vessel-list").addEventListener("click", () => {
                const listContainer = document.getElementById("vessel-list-container");
                const toggleButton = document.getElementById("toggle-vessel-list");

                if (listContainer.style.display === "none") {
                    listContainer.style.display = "block";
                    toggleButton.textContent = "Hide Vessels"; // Buton yazısını değiştir
                } else {
                    listContainer.style.display = "none";
                    toggleButton.textContent = "Show Vessels"; // Buton yazısını değiştir
                }
            });
        });

    </script>




    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js"
        crossorigin="anonymous"></script>

    </body>