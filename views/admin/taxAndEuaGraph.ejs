<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>EUA and Tax Graph</title>
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
</head>

<style>
    .start-end-date {
        display: flex;
        align-items: center;
        justify-content: flex-start;
    }

    label {
        font-weight: bold;
    }
</style>

<body>


    <h3 class="h3 mt-5 mb-4 ms-5">EUA Price and Monthly Tax Progression</h3>

    <div class="container mt-3 p-2 start-end-date bg-light border rounded">
        <div class="ms-4 d-flex">
            <label for="vesselSelector">Select Vessel:</label>
            <select id="vesselSelector" class="form-select p-1">
                <option value="">All Vessels</option>
            </select>
        </div>

        <div class="ms-4">
            <label for="startDate">Start Date:</label>
            <input id="startDate" class="form-input p-1" type="text" placeholder="Select Start Date">
        </div>

        <div class="ms-4">
            <label for="endDate">End Date:</label>
            <input id="endDate" class="form-input p-1" type="text" placeholder="Select End Date">
        </div>

        <button id="applyFilter" class="btn btn-primary btn-sm ms-2 me-5">Apply Filter</button>

        <!-- Dropdown menü -->
        <div class="ms-4">
            <label for="metricSelector">Select Metric:</label>
            <select id="metricSelector" class="form-select">
                <option value="emissions">Total CO2 Emission (ton)</option>
                <option value="tax">Total Tax</option>
                <option value="eua">Total EUA</option>
            </select>
        </div>
    </div>





    <h1></h1>

    <div id="chart" class="w-75 mx-auto"></div>

    <script>
        // Tarih seçici Flatpickr için yapılandırma
        flatpickr("#startDate", { dateFormat: "Y-m-d" });
        flatpickr("#endDate", { dateFormat: "Y-m-d" });

        // Gemi listesini yükle
        async function loadVessels() {
            try {
                const response = await fetch('/admin/fetchTaxAndEuaData?action=vessels');
                const data = await response.json();

                const vesselSelector = document.getElementById('vesselSelector');
                data.vesselList.forEach(vessel => {
                    const option = document.createElement('option');
                    option.value = vessel;
                    option.textContent = vessel;
                    vesselSelector.appendChild(option);
                });
            } catch (error) {
                console.error('Gemi listesi alınırken hata oluştu:', error);
            }
        }

        // Grafik verilerini yükle
        async function fetchData(startDate, endDate, vessel) {
            try {
                const query = new URLSearchParams({
                    startDate,
                    endDate,
                    vessel
                }).toString();

                const response = await fetch(`/admin/fetchTaxAndEuaData?${query}`);
                const data = await response.json();

                // Grafik seçenekleri
                const options = {
                    chart: {
                        type: 'line', // Çizgi ve bar karışık grafik
                        height: 400,
                        toolbar: {
                            show: false // Araç çubuğunu kapat
                        }
                    },
                    series: [
                        {
                            name: 'EUA Fiyatı (€)',
                            type: 'line',
                            data: data.euaPrices, // EUA fiyatları
                            color: '#007BFF' // Çizgi rengi
                        },
                        {
                            name: 'Vergi (€)',
                            type: 'bar',
                            data: data.taxes, // Vergiler
                            color: '#FFC107' // Bar rengi
                        }
                    ],
                    stroke: {
                        width: [2, 0], // Çizgi ve bar için farklı kalınlıklar
                        curve: 'smooth' // Yumuşak çizgiler
                    },
                    plotOptions: {
                        bar: {
                            borderRadius: 4, // Yuvarlatılmış barlar
                            horizontal: false
                        }
                    },
                    xaxis: {
                        categories: data.months, // Aylar
                        labels: {
                            rotate: -45, // Etiketleri biraz döndür
                            style: {
                                fontSize: '12px'
                            }
                        },
                        title: {
                            text: 'Ay',
                            style: {
                                fontSize: '14px',
                                fontWeight: 'bold'
                            }
                        }
                    },
                    yaxis: [
                        {
                            title: {
                                text: 'EUA Fiyatı (€)',
                                style: {
                                    fontSize: '14px',
                                    fontWeight: 'bold'
                                }
                            },
                            labels: {
                                style: {
                                    fontSize: '12px'
                                }
                            }
                        },
                        {
                            opposite: true, // Sağ eksen
                            title: {
                                text: 'Vergi (€)',
                                style: {
                                    fontSize: '14px',
                                    fontWeight: 'bold'
                                }
                            },
                            labels: {
                                style: {
                                    fontSize: '12px'
                                }
                            }
                        }
                    ],
                    dataLabels: {
                        enabled: false // Veri etiketlerini devre dışı bırak
                    },
                    legend: {
                        position: 'top',
                        horizontalAlign: 'center'
                    },
                    tooltip: {
                        shared: true,
                        intersect: false
                    }
                };

                document.querySelector("#chart").innerHTML = ""; // Eski grafiği temizle
                const chart = new ApexCharts(document.querySelector("#chart"), options);
                chart.render();
            } catch (error) {
                console.error('Grafik verisi alınırken hata oluştu:', error);
            }
        }

        // "Apply Filter" butonuna tıklanınca grafiği güncelle
        document.getElementById('applyFilter').addEventListener('click', () => {
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;
            const vessel = document.getElementById('vesselSelector').value;

            if (!startDate || !endDate) {
                alert("Please select both start and end dates.");
                return;
            }

            fetchData(startDate, endDate, vessel);
        });

        // Sayfa yüklenirken gemi listesini ve varsayılan grafiği yükle
        loadVessels();
        fetchData('', '', '');
    </script>
</body>

</html>