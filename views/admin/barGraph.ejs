<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ship Based Measures</title>
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
</head>

<style>
    .start-end-date {
        display: flex;
        align-items: center;
        justify-content: flex-start;
    }

    label {
        font-weight: bold;
    }
</style>

<body>
    <h3 class="h3 mt-5 mb-4 ms-5">Ship Based Measures</h3>

    <!-- Tarih seçici -->
    <div class="container mt-3 p-2 start-end-date bg-light border rounded">
        <div>
            <label for="startDate">Start Date:</label>
            <input class="form-input p-1" id="startDate" type="text" placeholder="Select Start Date">
        </div>

        <div class="ms-4">
            <label for="endDate">End Date:</label>
            <input class="form-input p-1" id="endDate" type="text" placeholder="Select End Date">
        </div>


        <button id="applyFilter" class="btn btn-primary btn-sm ms-2 me-5">Apply Filter</button>

        <!-- Dropdown menü -->
        <div class="ms-5 d-flex">
            <label for="metricSelector">Select Metric:</label>
            <select id="metricSelector" class="form-select">
                <option value="emissions">Total CO2 Emission (ton)</option>
                <option value="tax">Total Tax</option>
                <option value="eua">Total EUA</option>
            </select>
        </div>
    </div>


    <!-- Grafik -->
    <div id="chart" class="w-75 mx-auto"></div>

    <script>
        // Tarih seçici Flatpickr için yapılandırma
        flatpickr("#startDate", { dateFormat: "Y-m-d" });
        flatpickr("#endDate", { dateFormat: "Y-m-d" });

        // API'den veri çek ve grafiği güncelle
        async function fetchData(metric, startDate, endDate) {
            try {
                const response = await fetch(`/admin/fetchGraphData?metric=${metric}&startDate=${startDate}&endDate=${endDate}`);
                const data = await response.json();

                // Grafik seçenekleri
                const options = {
                    series: [{
                        name: metric === 'emissions' ? 'Total CO2 Emission (ton)' : metric === 'tax' ? 'Total Tax' : 'Total EUA',
                        data: data.values
                    }],
                    chart: {
                        type: 'bar',
                        height: 350
                    },
                    plotOptions: {
                        bar: {
                            borderRadius: 4,
                            borderRadiusApplication: 'end',
                            horizontal: true
                        }
                    },
                    dataLabels: {
                        enabled: false
                    },
                    xaxis: {
                        categories: data.categories // Gemi isimleri
                    }
                };

                // Grafiği oluştur ve render et
                document.querySelector("#chart").innerHTML = ""; // Önce eski grafiği temizle
                const chart = new ApexCharts(document.querySelector("#chart"), options);
                chart.render();
            } catch (error) {
                console.error('Grafik verisi alınırken hata oluştu:', error);
            }
        }

        // "Apply Filter" butonuna tıklanınca grafiği güncelle
        document.getElementById('applyFilter').addEventListener('click', () => {
            const metric = document.getElementById('metricSelector').value;
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;

            if (!startDate || !endDate) {
                alert("Please select both start and end dates.");
                return;
            }

            fetchData(metric, startDate, endDate);
        });

        // Sayfa yüklendiğinde varsayılan değerleri göster
        fetchData('emissions', '', '');
    </script>
</body>

</html>